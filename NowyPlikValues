image:
  repository: image-registry.openshift-image-registry.svc:5000/superset/superset-test
  tag: latest
  pullPolicy: IfNotPresent

# Konfiguracja połączeń do zewnętrznych baz
externalDatabase:
  host: superset-postgresql
  port: 5432
  user: superset
  password: superset
  database: superset

externalRedis:
  host: superset-redis-master
  port: 6379

# LDAP i stare ustawienia
configOverrides:
  superset_config.py: |
    import os
    from flask_appbuilder.security.manager import AUTH_LDAP
    AUTH_TYPE = AUTH_LDAP
    AUTH_LDAP_SERVER = "ldap://zus.ad:389/dc=zus,dc=ad?sAMAccountName?sub?(objectClass=*)"
    AUTH_LDAP_SEARCH = "cn=fasada,ou=konta_techniczne,ou=Centrala,dc=zus,dc=ad"
    AUTH_LDAP_UID_FIELD = "sAMAccountName"
    AUTH_ROLE_ADMIN = "Admin"
    AUTH_USER_REGISTRATION = True
    AUTH_USER_REGISTRATION_ROLE = "Gamma"
    # dopisać resztę z poprzedniej wersji superset_config.py

# PVC na NFS dla Superseta
persistence:
  enabled: true
  storageClass: "" # tu StorageClass NFS
  existingClaim: superset-nfs-pvc
  size: 2Ti
  accessModes:
    - ReadWriteMany

# HTTPS ingress
ingress:
  enabled: true
  hostname: superset.zus.ad
  ingressClassName: nginx
  tls: true
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  extraTls:
    - hosts:
        - superset.zus.ad
      secretName: superset-tls-secret

# Worker / Celery
workers:
  celery:
    replicas: 1
  worker:
    replicas: 1
  beat:
    replicas: 1

replicaCount: 1

resources:
  limits:
    memory: 4Gi
    cpu: 2
  requests:
    memory: 2Gi
    cpu: 1

# Wyłącz wbudowane Postgres i Redis (korzystamy z zewnętrznych)
postgresql:
  enabled: false

redis:
  enabled: false
